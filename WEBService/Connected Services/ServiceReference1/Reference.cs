//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEBService.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/login", ReplyAction="http://tempuri.org/IService/loginResponse")]
        bool login(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/login", ReplyAction="http://tempuri.org/IService/loginResponse")]
        System.Threading.Tasks.Task<bool> loginAsync(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerUsuarios", ReplyAction="http://tempuri.org/IService/obtenerUsuariosResponse")]
        ObjetosNegocio.UsuariosNegocio[] obtenerUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerUsuarios", ReplyAction="http://tempuri.org/IService/obtenerUsuariosResponse")]
        System.Threading.Tasks.Task<ObjetosNegocio.UsuariosNegocio[]> obtenerUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarUsuario", ReplyAction="http://tempuri.org/IService/agregarUsuarioResponse")]
        void agregarUsuario(ObjetosNegocio.UsuariosNegocio usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarUsuario", ReplyAction="http://tempuri.org/IService/agregarUsuarioResponse")]
        System.Threading.Tasks.Task agregarUsuarioAsync(ObjetosNegocio.UsuariosNegocio usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarUsuario", ReplyAction="http://tempuri.org/IService/actualizarUsuarioResponse")]
        void actualizarUsuario(ObjetosNegocio.UsuariosNegocio usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarUsuario", ReplyAction="http://tempuri.org/IService/actualizarUsuarioResponse")]
        System.Threading.Tasks.Task actualizarUsuarioAsync(ObjetosNegocio.UsuariosNegocio usuarios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarUsuario", ReplyAction="http://tempuri.org/IService/eliminarUsuarioResponse")]
        void eliminarUsuario(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarUsuario", ReplyAction="http://tempuri.org/IService/eliminarUsuarioResponse")]
        System.Threading.Tasks.Task eliminarUsuarioAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerClientes", ReplyAction="http://tempuri.org/IService/obtenerClientesResponse")]
        ObjetosNegocio.ClientesNegocio[] obtenerClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerClientes", ReplyAction="http://tempuri.org/IService/obtenerClientesResponse")]
        System.Threading.Tasks.Task<ObjetosNegocio.ClientesNegocio[]> obtenerClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarCliente", ReplyAction="http://tempuri.org/IService/agregarClienteResponse")]
        void agregarCliente(ObjetosNegocio.ClientesNegocio clientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarCliente", ReplyAction="http://tempuri.org/IService/agregarClienteResponse")]
        System.Threading.Tasks.Task agregarClienteAsync(ObjetosNegocio.ClientesNegocio clientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarCliente", ReplyAction="http://tempuri.org/IService/actualizarClienteResponse")]
        void actualizarCliente(ObjetosNegocio.ClientesNegocio clientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarCliente", ReplyAction="http://tempuri.org/IService/actualizarClienteResponse")]
        System.Threading.Tasks.Task actualizarClienteAsync(ObjetosNegocio.ClientesNegocio clientes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarCliente", ReplyAction="http://tempuri.org/IService/eliminarClienteResponse")]
        void eliminarCliente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarCliente", ReplyAction="http://tempuri.org/IService/eliminarClienteResponse")]
        System.Threading.Tasks.Task eliminarClienteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerMarca", ReplyAction="http://tempuri.org/IService/obtenerMarcaResponse")]
        ObjetosNegocio.MarcasNegocio[] obtenerMarca();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerMarca", ReplyAction="http://tempuri.org/IService/obtenerMarcaResponse")]
        System.Threading.Tasks.Task<ObjetosNegocio.MarcasNegocio[]> obtenerMarcaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarMarca", ReplyAction="http://tempuri.org/IService/agregarMarcaResponse")]
        void agregarMarca(ObjetosNegocio.MarcasNegocio marca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarMarca", ReplyAction="http://tempuri.org/IService/agregarMarcaResponse")]
        System.Threading.Tasks.Task agregarMarcaAsync(ObjetosNegocio.MarcasNegocio marca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarMarca", ReplyAction="http://tempuri.org/IService/actualizarMarcaResponse")]
        void actualizarMarca(ObjetosNegocio.MarcasNegocio marca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarMarca", ReplyAction="http://tempuri.org/IService/actualizarMarcaResponse")]
        System.Threading.Tasks.Task actualizarMarcaAsync(ObjetosNegocio.MarcasNegocio marca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarMarca", ReplyAction="http://tempuri.org/IService/eliminarMarcaResponse")]
        void eliminarMarca(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarMarca", ReplyAction="http://tempuri.org/IService/eliminarMarcaResponse")]
        System.Threading.Tasks.Task eliminarMarcaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerCategorias", ReplyAction="http://tempuri.org/IService/obtenerCategoriasResponse")]
        ObjetosNegocio.CategoriasNegocio[] obtenerCategorias();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerCategorias", ReplyAction="http://tempuri.org/IService/obtenerCategoriasResponse")]
        System.Threading.Tasks.Task<ObjetosNegocio.CategoriasNegocio[]> obtenerCategoriasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarCategoria", ReplyAction="http://tempuri.org/IService/agregarCategoriaResponse")]
        void agregarCategoria(ObjetosNegocio.CategoriasNegocio categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarCategoria", ReplyAction="http://tempuri.org/IService/agregarCategoriaResponse")]
        System.Threading.Tasks.Task agregarCategoriaAsync(ObjetosNegocio.CategoriasNegocio categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarCategoria", ReplyAction="http://tempuri.org/IService/actualizarCategoriaResponse")]
        void actualizarCategoria(ObjetosNegocio.CategoriasNegocio categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarCategoria", ReplyAction="http://tempuri.org/IService/actualizarCategoriaResponse")]
        System.Threading.Tasks.Task actualizarCategoriaAsync(ObjetosNegocio.CategoriasNegocio categoria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarCategoria", ReplyAction="http://tempuri.org/IService/eliminarCategoriaResponse")]
        void eliminarCategoria(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarCategoria", ReplyAction="http://tempuri.org/IService/eliminarCategoriaResponse")]
        System.Threading.Tasks.Task eliminarCategoriaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerArticulos", ReplyAction="http://tempuri.org/IService/obtenerArticulosResponse")]
        ObjetosNegocio.ArticulosNegocio[] obtenerArticulos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerArticulos", ReplyAction="http://tempuri.org/IService/obtenerArticulosResponse")]
        System.Threading.Tasks.Task<ObjetosNegocio.ArticulosNegocio[]> obtenerArticulosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarArticulo", ReplyAction="http://tempuri.org/IService/agregarArticuloResponse")]
        void agregarArticulo(ObjetosNegocio.ArticulosNegocio articulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarArticulo", ReplyAction="http://tempuri.org/IService/agregarArticuloResponse")]
        System.Threading.Tasks.Task agregarArticuloAsync(ObjetosNegocio.ArticulosNegocio articulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarArticulo", ReplyAction="http://tempuri.org/IService/actualizarArticuloResponse")]
        void actualizarArticulo(ObjetosNegocio.ArticulosNegocio articulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/actualizarArticulo", ReplyAction="http://tempuri.org/IService/actualizarArticuloResponse")]
        System.Threading.Tasks.Task actualizarArticuloAsync(ObjetosNegocio.ArticulosNegocio articulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarArticulo", ReplyAction="http://tempuri.org/IService/eliminarArticuloResponse")]
        void eliminarArticulo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarArticulo", ReplyAction="http://tempuri.org/IService/eliminarArticuloResponse")]
        System.Threading.Tasks.Task eliminarArticuloAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerFacturas", ReplyAction="http://tempuri.org/IService/obtenerFacturasResponse")]
        ObjetosNegocio.FacturasNegocio[] obtenerFacturas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerFacturas", ReplyAction="http://tempuri.org/IService/obtenerFacturasResponse")]
        System.Threading.Tasks.Task<ObjetosNegocio.FacturasNegocio[]> obtenerFacturasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarFactura", ReplyAction="http://tempuri.org/IService/agregarFacturaResponse")]
        void agregarFactura(ObjetosNegocio.FacturasNegocio factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/agregarFactura", ReplyAction="http://tempuri.org/IService/agregarFacturaResponse")]
        System.Threading.Tasks.Task agregarFacturaAsync(ObjetosNegocio.FacturasNegocio factura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarFactura", ReplyAction="http://tempuri.org/IService/eliminarFacturaResponse")]
        void eliminarFactura(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/eliminarFactura", ReplyAction="http://tempuri.org/IService/eliminarFacturaResponse")]
        System.Threading.Tasks.Task eliminarFacturaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerDetalleFacturas", ReplyAction="http://tempuri.org/IService/obtenerDetalleFacturasResponse")]
        ObjetosNegocio.DetalleFacturasNegocio[] obtenerDetalleFacturas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/obtenerDetalleFacturas", ReplyAction="http://tempuri.org/IService/obtenerDetalleFacturasResponse")]
        System.Threading.Tasks.Task<ObjetosNegocio.DetalleFacturasNegocio[]> obtenerDetalleFacturasAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WEBService.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WEBService.ServiceReference1.IService>, WEBService.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool login(string usuario, string contraseña) {
            return base.Channel.login(usuario, contraseña);
        }
        
        public System.Threading.Tasks.Task<bool> loginAsync(string usuario, string contraseña) {
            return base.Channel.loginAsync(usuario, contraseña);
        }
        
        public ObjetosNegocio.UsuariosNegocio[] obtenerUsuarios() {
            return base.Channel.obtenerUsuarios();
        }
        
        public System.Threading.Tasks.Task<ObjetosNegocio.UsuariosNegocio[]> obtenerUsuariosAsync() {
            return base.Channel.obtenerUsuariosAsync();
        }
        
        public void agregarUsuario(ObjetosNegocio.UsuariosNegocio usuarios) {
            base.Channel.agregarUsuario(usuarios);
        }
        
        public System.Threading.Tasks.Task agregarUsuarioAsync(ObjetosNegocio.UsuariosNegocio usuarios) {
            return base.Channel.agregarUsuarioAsync(usuarios);
        }
        
        public void actualizarUsuario(ObjetosNegocio.UsuariosNegocio usuarios) {
            base.Channel.actualizarUsuario(usuarios);
        }
        
        public System.Threading.Tasks.Task actualizarUsuarioAsync(ObjetosNegocio.UsuariosNegocio usuarios) {
            return base.Channel.actualizarUsuarioAsync(usuarios);
        }
        
        public void eliminarUsuario(int id) {
            base.Channel.eliminarUsuario(id);
        }
        
        public System.Threading.Tasks.Task eliminarUsuarioAsync(int id) {
            return base.Channel.eliminarUsuarioAsync(id);
        }
        
        public ObjetosNegocio.ClientesNegocio[] obtenerClientes() {
            return base.Channel.obtenerClientes();
        }
        
        public System.Threading.Tasks.Task<ObjetosNegocio.ClientesNegocio[]> obtenerClientesAsync() {
            return base.Channel.obtenerClientesAsync();
        }
        
        public void agregarCliente(ObjetosNegocio.ClientesNegocio clientes) {
            base.Channel.agregarCliente(clientes);
        }
        
        public System.Threading.Tasks.Task agregarClienteAsync(ObjetosNegocio.ClientesNegocio clientes) {
            return base.Channel.agregarClienteAsync(clientes);
        }
        
        public void actualizarCliente(ObjetosNegocio.ClientesNegocio clientes) {
            base.Channel.actualizarCliente(clientes);
        }
        
        public System.Threading.Tasks.Task actualizarClienteAsync(ObjetosNegocio.ClientesNegocio clientes) {
            return base.Channel.actualizarClienteAsync(clientes);
        }
        
        public void eliminarCliente(int id) {
            base.Channel.eliminarCliente(id);
        }
        
        public System.Threading.Tasks.Task eliminarClienteAsync(int id) {
            return base.Channel.eliminarClienteAsync(id);
        }
        
        public ObjetosNegocio.MarcasNegocio[] obtenerMarca() {
            return base.Channel.obtenerMarca();
        }
        
        public System.Threading.Tasks.Task<ObjetosNegocio.MarcasNegocio[]> obtenerMarcaAsync() {
            return base.Channel.obtenerMarcaAsync();
        }
        
        public void agregarMarca(ObjetosNegocio.MarcasNegocio marca) {
            base.Channel.agregarMarca(marca);
        }
        
        public System.Threading.Tasks.Task agregarMarcaAsync(ObjetosNegocio.MarcasNegocio marca) {
            return base.Channel.agregarMarcaAsync(marca);
        }
        
        public void actualizarMarca(ObjetosNegocio.MarcasNegocio marca) {
            base.Channel.actualizarMarca(marca);
        }
        
        public System.Threading.Tasks.Task actualizarMarcaAsync(ObjetosNegocio.MarcasNegocio marca) {
            return base.Channel.actualizarMarcaAsync(marca);
        }
        
        public void eliminarMarca(int id) {
            base.Channel.eliminarMarca(id);
        }
        
        public System.Threading.Tasks.Task eliminarMarcaAsync(int id) {
            return base.Channel.eliminarMarcaAsync(id);
        }
        
        public ObjetosNegocio.CategoriasNegocio[] obtenerCategorias() {
            return base.Channel.obtenerCategorias();
        }
        
        public System.Threading.Tasks.Task<ObjetosNegocio.CategoriasNegocio[]> obtenerCategoriasAsync() {
            return base.Channel.obtenerCategoriasAsync();
        }
        
        public void agregarCategoria(ObjetosNegocio.CategoriasNegocio categoria) {
            base.Channel.agregarCategoria(categoria);
        }
        
        public System.Threading.Tasks.Task agregarCategoriaAsync(ObjetosNegocio.CategoriasNegocio categoria) {
            return base.Channel.agregarCategoriaAsync(categoria);
        }
        
        public void actualizarCategoria(ObjetosNegocio.CategoriasNegocio categoria) {
            base.Channel.actualizarCategoria(categoria);
        }
        
        public System.Threading.Tasks.Task actualizarCategoriaAsync(ObjetosNegocio.CategoriasNegocio categoria) {
            return base.Channel.actualizarCategoriaAsync(categoria);
        }
        
        public void eliminarCategoria(int id) {
            base.Channel.eliminarCategoria(id);
        }
        
        public System.Threading.Tasks.Task eliminarCategoriaAsync(int id) {
            return base.Channel.eliminarCategoriaAsync(id);
        }
        
        public ObjetosNegocio.ArticulosNegocio[] obtenerArticulos() {
            return base.Channel.obtenerArticulos();
        }
        
        public System.Threading.Tasks.Task<ObjetosNegocio.ArticulosNegocio[]> obtenerArticulosAsync() {
            return base.Channel.obtenerArticulosAsync();
        }
        
        public void agregarArticulo(ObjetosNegocio.ArticulosNegocio articulo) {
            base.Channel.agregarArticulo(articulo);
        }
        
        public System.Threading.Tasks.Task agregarArticuloAsync(ObjetosNegocio.ArticulosNegocio articulo) {
            return base.Channel.agregarArticuloAsync(articulo);
        }
        
        public void actualizarArticulo(ObjetosNegocio.ArticulosNegocio articulo) {
            base.Channel.actualizarArticulo(articulo);
        }
        
        public System.Threading.Tasks.Task actualizarArticuloAsync(ObjetosNegocio.ArticulosNegocio articulo) {
            return base.Channel.actualizarArticuloAsync(articulo);
        }
        
        public void eliminarArticulo(int id) {
            base.Channel.eliminarArticulo(id);
        }
        
        public System.Threading.Tasks.Task eliminarArticuloAsync(int id) {
            return base.Channel.eliminarArticuloAsync(id);
        }
        
        public ObjetosNegocio.FacturasNegocio[] obtenerFacturas() {
            return base.Channel.obtenerFacturas();
        }
        
        public System.Threading.Tasks.Task<ObjetosNegocio.FacturasNegocio[]> obtenerFacturasAsync() {
            return base.Channel.obtenerFacturasAsync();
        }
        
        public void agregarFactura(ObjetosNegocio.FacturasNegocio factura) {
            base.Channel.agregarFactura(factura);
        }
        
        public System.Threading.Tasks.Task agregarFacturaAsync(ObjetosNegocio.FacturasNegocio factura) {
            return base.Channel.agregarFacturaAsync(factura);
        }
        
        public void eliminarFactura(int id) {
            base.Channel.eliminarFactura(id);
        }
        
        public System.Threading.Tasks.Task eliminarFacturaAsync(int id) {
            return base.Channel.eliminarFacturaAsync(id);
        }
        
        public ObjetosNegocio.DetalleFacturasNegocio[] obtenerDetalleFacturas() {
            return base.Channel.obtenerDetalleFacturas();
        }
        
        public System.Threading.Tasks.Task<ObjetosNegocio.DetalleFacturasNegocio[]> obtenerDetalleFacturasAsync() {
            return base.Channel.obtenerDetalleFacturasAsync();
        }
    }
}
